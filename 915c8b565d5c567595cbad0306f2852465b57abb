{
  "comments": [
    {
      "key": {
        "uuid": "dabed58f_025ecee6",
        "filename": "docs/release/configguide/feature.configuration.rst",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 132
      },
      "writtenOn": "2017-03-08T00:03:15Z",
      "side": 1,
      "message": "Perhaps you mean instead that Vitrage actually calls the Nova mark host down API? If yes, should be more explicit here. \"Notifies\" sounds more like sending a notification message to the bus without making any changes.\n\nDoes Vitrage support other Nova actions other than mark host down and erroring instance states? And actions for other OpenStack service (e.g. Neutron, Cinder)?",
      "range": {
        "startLine": 85,
        "startChar": 62,
        "endLine": 85,
        "endChar": 75
      },
      "revId": "915c8b565d5c567595cbad0306f2852465b57abb",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabed58f_51424c11",
        "filename": "docs/release/configguide/feature.configuration.rst",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 4127
      },
      "writtenOn": "2017-03-12T15:41:46Z",
      "side": 1,
      "message": "I modified the description to be more precise.\nAre the set-state APIs already supported in Neutron and Cinder? If so, supporting them in Vitrage should be an easy task.",
      "parentUuid": "dabed58f_025ecee6",
      "range": {
        "startLine": 85,
        "startChar": 62,
        "endLine": 85,
        "endChar": 75
      },
      "revId": "915c8b565d5c567595cbad0306f2852465b57abb",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ab8dda7_6d2b3183",
        "filename": "docs/release/configguide/feature.configuration.rst",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 132
      },
      "writtenOn": "2017-03-13T22:23:32Z",
      "side": 1,
      "message": "My question was more on a broader sense, not limiting to set-state. After quickly checking how Vitrage works, I now understand that each fault management and maintenance actions need to be implemented individually.",
      "parentUuid": "dabed58f_51424c11",
      "range": {
        "startLine": 85,
        "startChar": 62,
        "endLine": 85,
        "endChar": 75
      },
      "revId": "915c8b565d5c567595cbad0306f2852465b57abb",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabed58f_a272627a",
        "filename": "docs/release/configguide/feature.configuration.rst",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 132
      },
      "writtenOn": "2017-03-08T00:03:15Z",
      "side": 1,
      "message": "Who propagates (Vitrage? Nova?) which alarms? What are the consequences of those alarms?\n\nI think you\u0027re suggesting here that upon marking host down, Vitrage will deduct that all VM instances on that particular host are hence affected, too, and their state need to be thus set to ERROR, which Vitrage will call the Nova instance set-state API.",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 25
      },
      "revId": "915c8b565d5c567595cbad0306f2852465b57abb",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabed58f_71451016",
        "filename": "docs/release/configguide/feature.configuration.rst",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 4127
      },
      "writtenOn": "2017-03-12T15:41:46Z",
      "side": 1,
      "message": "I modified the description.",
      "parentUuid": "dabed58f_a272627a",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 25
      },
      "revId": "915c8b565d5c567595cbad0306f2852465b57abb",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}