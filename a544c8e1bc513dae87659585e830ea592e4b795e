{
  "comments": [
    {
      "key": {
        "uuid": "5a682502_fbb4bef3",
        "filename": "doctor_tests/installer/apex.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 7409
      },
      "writtenOn": "2018-10-05T04:42:43Z",
      "side": 1,
      "message": "Is it good to fix the path like this? Is there any possibility that it will change in the future?",
      "range": {
        "startLine": 69,
        "startChar": 31,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_9ba66ac0",
        "filename": "doctor_tests/installer/apex.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 751
      },
      "writtenOn": "2018-10-05T06:28:01Z",
      "side": 1,
      "message": "Overcloud is run from the undercloud from where we seek the information. There was no configuration file or so present there, so this was the best choice from there.",
      "parentUuid": "5a682502_fbb4bef3",
      "range": {
        "startLine": 69,
        "startChar": 31,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_dbb902eb",
        "filename": "doctor_tests/installer/apex.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 7409
      },
      "writtenOn": "2018-10-05T04:42:43Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 88,
        "startChar": 22,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_fbab1e87",
        "filename": "doctor_tests/installer/apex.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 751
      },
      "writtenOn": "2018-10-05T06:28:01Z",
      "side": 1,
      "message": "Have to change if needed in future.",
      "parentUuid": "5a682502_dbb902eb",
      "range": {
        "startLine": 88,
        "startChar": 22,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_1bcb7a73",
        "filename": "doctor_tests/installer/base.py",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 7409
      },
      "writtenOn": "2018-10-05T04:42:43Z",
      "side": 1,
      "message": "Is there any reason not to make the scripts compatible with python3? I just wonder.",
      "range": {
        "startLine": 143,
        "startChar": 27,
        "endLine": 143,
        "endChar": 56
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_dbb0e2f6",
        "filename": "doctor_tests/installer/base.py",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 751
      },
      "writtenOn": "2018-10-05T06:28:01Z",
      "side": 1,
      "message": "We do choose what deployment offers. If apex (in this case) do not provide python3 at all, then we have to use python2.",
      "parentUuid": "5a682502_1bcb7a73",
      "range": {
        "startLine": 143,
        "startChar": 27,
        "endLine": 143,
        "endChar": 56
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_7bc8ae74",
        "filename": "doctor_tests/scenario/maintenance.py",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 7409
      },
      "writtenOn": "2018-10-05T04:42:43Z",
      "side": 1,
      "message": "I assume that these numbers are just opinioned. And so that you changed them to fit your test environment.",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 23
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_3b959640",
        "filename": "doctor_tests/scenario/maintenance.py",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 751
      },
      "writtenOn": "2018-10-05T06:28:01Z",
      "side": 1,
      "message": "Test code is still not too advanced, so the admin could have other means than polling. Unfortunately, polling will make logging ugly as messes the nice maintenance session logs. So yes, this not so nice optimization here tries to avoid wasting too much time in case maintenance is done, but also not do unnecessary log to early. A really ugly thing that should be enhanced at a point when Fenix also has notification event of maintenance session done.",
      "parentUuid": "5a682502_7bc8ae74",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 23
      },
      "revId": "a544c8e1bc513dae87659585e830ea592e4b795e",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}