#!/bin/bash

function get_installer_ip {
    ssh_opts_cpu="$ssh_opts -i instack_key"
    is_set INSTALLER_IP && return
    local instack_mac=$(sudo virsh domiflist fuel-master | awk '/fuel1/{print $5}')
    INSTALLER_IP=$(/usr/sbin/arp -e | grep ${instack_mac} | awk '{print $1}')
    die_if_not_set $LINENO $INSTALLER_IP "No installer IP"
}

function get_controller_ips {
    is_set CONTROLLER_IPS && return
    get_installer_ip
    CONTROLLER_IPS=$(ssh $ssh_opts_cpu root@$INSTALLER_IP \
                     "fuel node | grep controller | cut -d '|' -f 5|xargs")
    die_if_not_set $LINENO $CONTROLLER_IPS "No controller IPs"
}

function installer_get_ssh_keys {
    if [[ -e instack_key ]]; then
        echo "test existing instack_key..."
        ssh $ssh_opts_cpu root@${INSTALLER_IP} "hostname" && return
    fi
    echo "getting instack_key from fuel node..."
    sshpass -p r00tme scp $ssh_opts root@${INSTALLER_IP}:.ssh/id_rsa instack_key
    sudo chown $(whoami):$(whoami) instack_key
    chmod 400 instack_key
}

function installer_apply_patches {
    get_installer_ip
    ssh $ssh_opts_cpu root@${INSTALLER_IP} "
        date
        echo '### apply patches (installer=fuel)'
        source openrc
        if ! openstack flavor show $VM_FLAVOR ; then
            openstack flavor create --ram 512 --disk 1 $VM_FLAVOR && touch created_doctor_flavor
        fi
    " > installer_apply_patches_installer.log 2>&1

    get_controller_ips
    for node in $CONTROLLER_IPS;do
        echo "check controller configuration for doctor ($node)"
        ssh $ssh_opts_cpu "root@$node" '
            set -x

            save_file() {
                [[ -e "$1.doctor-saved" ]] || cp "$1" "$1.doctor-saved"
            }

            date
            echo "### apply patches (installer=fuel)"

            if [[ ! -e /etc/ceilometer/event_pipeline.yaml ]]; then
                echo "ceilometer event_pipeline.yaml file does not exist"
                exit 1
            fi
            if ! grep -q -e "- notifier://?topic=alarm.all" /etc/ceilometer/event_pipeline.yaml; then
                save_file /etc/ceilometer/event_pipeline.yaml
                echo "modify the ceilometer config"
                echo "          - notifier://?topic=alarm.all" >> /etc/ceilometer/event_pipeline.yaml
                service ceilometer-agent-notification restart
            fi
            ' > installer_apply_patches_$node.log 2>&1
    done
}

function cleanup_installer_fuel {
    get_installer_ip
    ssh $ssh_opts_cpu root@${INSTALLER_IP} "
        date
        echo '### revert patches (installer=fuel)'
        source openrc
        if [[ -e created_doctor_flavor ]] && openstack flavor show $VM_FLAVOR ; then
            openstack flavor delete $VM_FLAVOR && rm -f created_doctor_flavor
        fi
    " >> installer_apply_patches_installer.log 2>&1

    get_controller_ips
    for node in $CONTROLLER_IPS;do
        echo "restore controller configuration if touched ($node)"
        ssh $ssh_opts_cpu "root@$node" '
            set -x

            restore_file() {
                [[ -e "$1.doctor-saved" ]] && mv -f "$1.doctor-saved" "$1"
            }

            date
            echo "### revert patches (installer=fuel)"
            restore_file /etc/ceilometer/event_pipeline.yaml
            ' >> installer_apply_patches_$node.log 2>&1
    done
}
